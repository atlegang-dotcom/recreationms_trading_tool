/*
 * recreationms_trading_tool
 * a simple trading tool to return the percentage drop of a coin using coingecko api for rates and historical data
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RecreationmsTradingTool);
  }
}(this, function(expect, RecreationmsTradingTool) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('HistoricalData', function() {
      beforeEach(function() {
        instance = new RecreationmsTradingTool.HistoricalData();
      });

      it('should create an instance of HistoricalData', function() {
        // TODO: update the code to test HistoricalData
        expect(instance).to.be.a(RecreationmsTradingTool.HistoricalData);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property symbol (base name: "symbol")', function() {
        // TODO: update the code to test the property symbol
        expect(instance).to.have.property('symbol');
        // expect(instance.symbol).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property localization (base name: "localization")', function() {
        // TODO: update the code to test the property localization
        expect(instance).to.have.property('localization');
        // expect(instance.localization).to.be(expectedValueLiteral);
      });

      it('should have the property image (base name: "image")', function() {
        // TODO: update the code to test the property image
        expect(instance).to.have.property('image');
        // expect(instance.image).to.be(expectedValueLiteral);
      });

      it('should have the property marketData (base name: "market_data")', function() {
        // TODO: update the code to test the property marketData
        expect(instance).to.have.property('marketData');
        // expect(instance.marketData).to.be(expectedValueLiteral);
      });

      it('should have the property communityData (base name: "community_data")', function() {
        // TODO: update the code to test the property communityData
        expect(instance).to.have.property('communityData');
        // expect(instance.communityData).to.be(expectedValueLiteral);
      });

      it('should have the property developerData (base name: "developer_data")', function() {
        // TODO: update the code to test the property developerData
        expect(instance).to.have.property('developerData');
        // expect(instance.developerData).to.be(expectedValueLiteral);
      });

      it('should have the property publicInterestStats (base name: "public_interest_stats")', function() {
        // TODO: update the code to test the property publicInterestStats
        expect(instance).to.have.property('publicInterestStats');
        // expect(instance.publicInterestStats).to.be(expectedValueLiteral);
      });

    });
  });

}));
